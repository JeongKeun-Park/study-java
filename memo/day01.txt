JAVA - 프로그래밍 언어
		프로그래밍 언어는 개발자와 운영체제가 소통하기 위한 언어이다.

소스코드
		명령어를 작성해 놓은 것.
		개발자와 운영체제가 소통할 것을 글로 작성해 놓은 것.

소스파일
		소스코드를 작성해 놓은 파일.

컴파일
		사람의 언어를 컴퓨터 언어로 바꿔주는 작업.

컴파일러
		컴파일을 해주는 프로그램 또는 명령어
		컴파일러는 위에서 아래로, 좌에서 우로 번역한다.

프로그램
		소스코드로 잘 짜여진 툴.

콘솔
		개발자와 운영체제가 소통한 결과를 보여주는 창.(리눅스 공부하면 좋음)

▶일반 프로그램
		프로그램
		OS(운영체제) : 하드웨어에 적절한 전기신호를 흘려주는 역할.
		하드웨어 : 

▶JAVA 프로그램
		JAVA 프로그램
		JVM : JAVA 프로그램을 OS에 맞게 변환해준다.
		OS(운영체제) : 하드웨어에 적절한 전기신호를 흘려주는 역할.
		하드웨어 

		- 이식성이 좋다.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
JVM(Java VIrtual Machine)
		JAVA 프로그램을 실행해 줌.

JRE(Java Runtime Environment)
		JVM을 생성하며, 실행할 때 필요한 라이브러리 파일들을 가지고 있다.

JDK(Java Development Kit)
		JRE 안에 개발에 필요한 도구들을 가지고 있다.
		컴파일 명령어와 실행 명령어를 담고있다.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
JDK 설치

환경변수 편집
JAVA_HOME 변수선언하고 경로를 값으로 설정
Path로 가서 %JAVA_HOME%\bin을 추가하고 맨위로 올리기
		//변수명은 %로 감싸고 그뒤에 추가경로를 적는다

IDE 설치
		- 이클립스


		-인텔리제이
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
기본 구조
		프로젝트
				패키지
						클래스
								메소드
										소스코드

함수 : 어딘가에 갇혀있지 않다
메소드 : 어딘가에 갇혀있다.
windows/Preference/compile확인 font확인 (consolas)

단축키, 설정
컴파일 과정 : 디버그 -> 빌드 -> 링크 -> 실행
ctrl m 영역확대
art shift q 각 영역 보여주기
ctrl f11 콘솔창 출력
ctrl alt 방향키 -> 복사
ctrl shift f 자동줄정렬
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
출력 메소드
	1. print( ) : 마지막에 자동으로 줄바꿈되지 않고 아래 문장과 이어서 출력된다.
	2. println ( ) : 마지막에 자동으로 줄바꿈된다.
	3. printf( ) : 

출력 메소드를 사용하는 이유
	데이터를 사용하기 위해서 사용하는 도구이다.
	*오류를 구체화하기 위해 사용하는 도구이다.*
	즉, 출력 메소드는 개발자를 위한 도구이다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
변수
	변수는 저장공간이다.

	x		=		10
    저장공간의	대입		값(상수)
	이름		연산자

자료형(type)
	자요형은 저장공간의 종류이다.

	자료형		type			byte			값

	정수형		byte			1			4, 1, -120, 100, ....
				short			2			9, 150, -55, ...
				int(defalt)		4			1234, 34234, -2121453442, ...
				long			8			231245234631L, -234135215235L, ...

	실수형		float			4			3.7F, -0.93F, ....
				double(defalt)	8			32.12, 182.2341, ...

	문자형		char			2			'A', '0', '안', ...
	java는 유닛코드

	문자열		Srting			???			"ABC", "12.52", "123", "안녕", ...

변수의 선언
	자료형 변수명 = 초기값 ;		◀ 초기화
 
	자료형 변수명;

	ex)
	int x = 10;
	x라는 이름의 정수형 저장공간이 할당(allocation)되고 그 안에 10이 들어간다.

변수의 초기값
	정수 : 0
	실수 : 0.0
	문자 : ' ' -> 공백이 들어가있다.
	문자열 : "", null

변수의 사용
	저장공간의 확인단계
	1단계 : 자료형을 확인한다.
	2단계 : 대입 연산자를 확인한다.

	int data = 10;	// 저장공간
	data + 9;		// 값
	data = data + 99	// 저장공간, 값
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
상수
	항상 그대로인 수
	값을 변경할 수 없도록 한다.

	final 자료형 상수명 = 값;

상수를 사용하는 이유
	값에 의미부여를 하기 위해서
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
형변환
	- 자동 형변환
		정수 + 정수 = 정수
		정수 + 실수 = 실수
		정수 + 문자 = 정수

		3 + 0.0 = 3.0
		10 / 3 = 3
		10 % 1 = 1
		'A' + 3 = 68

	- 강제 형변환
		(자료형)값
		(double)3

문자열 형변환
	1. 다른 자료형을 문자열로
		문자열과 다른 일반 자료형을 연결하면 결과는 문자열이 된다.

	2. 문자열을 다른 자료형으로
		일반 자료형은 일반 자료형끼리만 형 변환이 가능하다.
		문자열 타입은 클래스 타입이므로, 일반 자료형의 클래스 타입의 도움을 받아야한다.

		Integer.parseInt("") => 문자열에서 변환(추출)된 정수
		Double.parseDouble("") => 문자열에서 변환(추출)된 실수
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
입력
	커서가 깜빡이고 있는 상태를 입력상태라고 한다.
	입력하기 전에 출력을 통해 어떤 값을 입력해야 할지 사용자에게 알려줘야 한다.

입력 클래스
	Scanner sc= new Scanner(System.in);
	자료형 변수명		값

입력 메소드
	next() : 사용자가 입력한 문자열 값
			- 사용자가 입력한 값 중 공백 또는 줄바꿈 문자(엔터)를 구분점으로 각 문자열을 분리한다.
			- 첫 번째 문자열은 첫 번째 next()에 담긴다.
			  두 번째 문자열은 두 번째 next()에 담긴다.
			  ...

	nextLine() : 사용자가 입력한 문자열 값
			- 공백 또는 줄바꿈 문자도 모두 값으로 취급하기 때문에 그대로 입력받는다.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
연산자
	기능이 있는 특수문자

연산자의 우선순위
	최우선 연산자
	단항 연산자
	산술 연산자
	쉬프트 연산자
	관계 연산자
	논리 연산자
	삼항 연산자
	대입 연산자

결합성
	하나의 수식에 동일한 연산자가 여러 개 사용되면 알맞은 방향으로 결합되어 연산되는 성질
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
논리형(boolean)
	참 : true
	거짓 : false

	초기값 : false ;

	boolean(1byte) = true, false
	boolean check = true;

조건식
	결과가 참 또는 거짓 둘중 하나가 나오는 식

  관계 연산자
      ==   같다
      !=   같지 않다
      >, <   초과, 미만
      >=, <=   이상, 이하


   논리 연산자
      && (AND), A && B   두 조건식 모두 참이면 참
      || (OR), A || B      둘 중 하나라도 참이면 참

   
   단항 연산자
      ! (NOT), !A      조건식이 참이면 거짓으로, 거짓이면 참으로 변경


   삼항 연산자
      ? :   조건식 ? 참 : 거짓, 조건식이 참이면 참, 거짓이면 거짓
      예) int result = 10 > 11 ? 10 : 11;
      
      ※ 한 개의 조건식만 있을 때 사용하는 것이 좋다.
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------






